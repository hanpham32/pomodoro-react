{"version":3,"sources":["components/StartBtn.js","components/PauseBtn.js","components/CurrentSession.js","components/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["StartBtn","setStatus","status","className","onClick","prevStatus","CurrentSession","Timer","useState","minutes","setMinutes","seconds","setSeconds","useEffect","interval","clearInterval","console","log","setInterval","timerMinutes","timerSeconds","PauseBtn","App","style","backgroundColor","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qKAUeA,EATE,SAAC,GAAyB,IAAxBC,EAAuB,EAAvBA,UAAuB,EAAZC,OAE5B,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQC,QAAS,kBAAMH,GAAU,SAAAI,GAAU,OAAa,MAAxD,sBCISL,EARE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,UAAwB,EAAbC,OAC7B,OACE,qBAAKC,UAAU,MAAf,SACE,wBAAQC,QAAS,kBAAMH,GAAU,SAACI,GAAD,OAAyB,MAA1D,sBCMSC,EARQ,SAAC,GAAgB,IAAdJ,EAAa,EAAbA,OACxB,OACE,8BACE,oBAAIC,UAAU,SAAd,SAAwBD,EAAS,eAAiB,oBCoEzCK,EAnED,SAAC,GAA2B,IAAzBL,EAAwB,EAAxBA,OAAQD,EAAgB,EAAhBA,UACvB,EAA8BO,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA8BF,mBAAS,GAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KAsBAC,qBAAU,WACR,IAAIC,EAEJ,OADAC,cAAcD,GACVZ,GACFc,QAAQC,IAAIf,GACZY,EAAWI,aAAY,WACrB,GAAgB,IAAZP,GAA6B,IAAZF,EAAe,CAElC,IAAMA,EAAUP,EAAS,GAAK,EAG9B,OAFAU,EAAW,IACXF,EAAWD,GACJ,kBAAMM,cAAcD,IACN,IAAZH,GAAiBF,EAAU,GACpCG,EAAW,IACXF,EAAWD,EAAU,IAErBG,EAAWD,EAAU,KAEtB,KACI,kBAAMI,cAAcD,MAE3BE,QAAQC,IAAIf,GACL,kBAAMa,cAAcD,QAI/B,IAAMK,EAAeV,EAAU,GAAK,IAAMA,EAAUA,EAC9CW,EAAeT,EAAU,GAAK,IAAMA,EAAUA,EAEpD,OACE,gCACE,cAAC,EAAD,CAAgBT,OAAQA,IACxB,sBAAKC,UAAU,SAAf,UACE,+BAAOgB,IADT,IAC8B,+BAAOC,IADrC,IAC0D,0BAE1D,sBAAKjB,UAAU,oBAAf,UACE,cAAC,EAAD,CAAUF,UAAWA,EAAWC,OAAQA,IACxC,cAACmB,EAAD,CAAUpB,UAAWA,EAAWC,OAAQA,WC1CjCoB,MArBf,WACE,MAA4Bd,oBAAS,GAArC,mBAAON,EAAP,KAAeD,EAAf,KAYA,OACE,sBAAKE,UAAU,MAAMoB,MAAOrB,EAVX,CACjBsB,gBAAiB,UACjBC,MAAO,SAES,CAChBD,gBAAiB,UACjBC,MAAO,WAIP,UACE,sBAAMtB,UAAU,YAAhB,sBACA,cAAC,EAAD,CAAOD,OAAQA,EAAQD,UAAWA,QCTzByB,EAXS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.d6359128.chunk.js","sourcesContent":["import React from \"react\";\r\nconst StartBtn = ({setStatus, status}) => {\r\n\r\n  return (\r\n    <div className=\"btn\">\r\n      <button onClick={() => setStatus(prevStatus => status = true)} >Start</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartBtn;\r\n","import React from \"react\";\r\nconst StartBtn = ({ setStatus, status }) => {\r\n  return (\r\n    <div className=\"btn\">\r\n      <button onClick={() => setStatus((prevStatus) => status = false)}>Pause</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartBtn;\r\n","import React from \"react\";\r\n\r\nconst CurrentSession = ({ status }) => {\r\n  return (\r\n    <div>\r\n      <h1 className=\"status\">{status ? \"Work Session\" : \"Rest Session\"}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CurrentSession;\r\n","import React from \"react\";\r\nimport StartBtn from \"./StartBtn\";\r\nimport PauseBtn from \"./PauseBtn\";\r\nimport { useState, useEffect } from \"react\";\r\nimport CurrentSession from \"./CurrentSession\";\r\n\r\nconst Timer = ({ status, setStatus }) => {\r\n  const [minutes, setMinutes] = useState(25);\r\n  const [seconds, setSeconds] = useState(0);\r\n\r\n  // useEffect(() => {\r\n  //   let interval = setInterval(() => {\r\n  //     if (seconds === 0) {\r\n  //       if (minutes === 0) {\r\n  //         setSeconds(59);\r\n  //         setMinutes(minutes - 1);\r\n  //       } else {\r\n  //         let minutes = status ? 24 : 4;\r\n  //         let seconds = 59;\r\n\r\n  //         setSeconds(seconds);\r\n  //         setMinutes(minutes);\r\n  //         setStatus(!status);\r\n  //       }\r\n  //     } else {\r\n  //       setSeconds(seconds - 1);\r\n  //     }\r\n  //   }, 1000);\r\n  // }, [seconds]);\r\n\r\n  useEffect(() => {\r\n    let interval;\r\n    clearInterval(interval);\r\n    if (status) {\r\n      console.log(status);\r\n      interval = setInterval(() => {\r\n        if (seconds === 0 && minutes === 0) {\r\n          // time is up\r\n          const minutes = status ? 25 : 5;\r\n          setSeconds(59);\r\n          setMinutes(minutes);\r\n          return () => clearInterval(interval);\r\n        } else if (seconds === 0 && minutes > 0) {\r\n          setSeconds(59);\r\n          setMinutes(minutes - 1);\r\n        } else {\r\n          setSeconds(seconds - 1);\r\n        }\r\n      }, 1000);\r\n      return () => clearInterval(interval);\r\n    } else {\r\n      console.log(status);\r\n      return () => clearInterval(interval);\r\n    }\r\n  });\r\n\r\n  const timerMinutes = minutes < 10 ? \"0\" + minutes : minutes;\r\n  const timerSeconds = seconds < 10 ? \"0\" + seconds : seconds;\r\n\r\n  return (\r\n    <div>\r\n      <CurrentSession status={status} />\r\n      <div className=\"status\">\r\n        <span>{timerMinutes}</span>:<span>{timerSeconds}</span> <br />\r\n      </div>\r\n      <div className=\"buttons-container\">\r\n        <StartBtn setStatus={setStatus} status={status} />\r\n        <PauseBtn setStatus={setStatus} status={status} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\nimport Timer from \"./components/Timer\";\r\n\r\nfunction App() {\r\n  const [status, setStatus] = useState(false);\r\n  // const [running, setRunning] = useState(false);\r\n\r\n  const lightTheme = {\r\n    backgroundColor: \"#ffd472\",\r\n    color: \"black\",\r\n  };\r\n  const darkTheme = {\r\n    backgroundColor: \"#222831\",\r\n    color: \"#EEEEEE\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\" style={status ? lightTheme:darkTheme}>\r\n      <span className=\"app-title\">Pomodoro</span>\r\n      <Timer status={status} setStatus={setStatus} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n// import './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}